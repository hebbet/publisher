import{_ as n,z as t,A as l,Y as a,C as e,U as r,a6 as s,Q as i}from"./framework.7a428f9b.js";const c={},d=a("h1",{id:"general-principles",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#general-principles","aria-hidden":"true"},"#"),e(" General principles")],-1),p={href:"https://github.com/laravel/framework/issues/41565#issuecomment-1073572954",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/Laravel-Lang/json-fallback-hotfix",target:"_blank",rel:"noopener noreferrer"},_=s(`<p>Almost all console commands accept an array of localizations as a parameter.</p><p>For example:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan lang:<span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> en de ro
php artisan lang:<span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> de
php artisan lang:<span class="token operator">&lt;</span>command<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Where:</p><ul><li><code>en de ro</code> - a list of locales separated by a space;</li><li><code>de</code> - it is also possible to specify a single localization name;</li><li>if the parameter is not passed during the call, the script will ask two questions: <ul><li><code>Do you want to %s all localizations?</code>, when <code>%s</code> is <code>install</code>, <code>remove</code> or <code>reset</code>;</li><li>If <code>no</code>, then next question is <code>Select localizations to add (specify the necessary localizations separated by commas)</code>.</li></ul></li></ul>`,5),m=a("code",null,"install",-1),f=a("code",null,"uninstall",-1),u=a("code",null,"reset",-1),b=a("code",null,"update",-1),g={href:"https://laravel.com",target:"_blank",rel:"noopener noreferrer"},k={href:"https://jetstream.laravel.com",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/laravel/fortify",target:"_blank",rel:"noopener noreferrer"},x={href:"https://laravel.com/docs/billing",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/laravel/breeze",target:"_blank",rel:"noopener noreferrer"},y={href:"https://nova.laravel.com",target:"_blank",rel:"noopener noreferrer"},z={href:"https://spark.laravel.com",target:"_blank",rel:"noopener noreferrer"},L={href:"https://github.com/laravel/ui",target:"_blank",rel:"noopener noreferrer"};function N(F,q){const o=i("ExternalLinkIcon");return t(),l("div",null,[d,a("blockquote",null,[a("p",null,[e("Json fallbacks "),a("a",p,[e("doesn't work"),r(o)]),e(" in the Laravel Framework.")]),a("p",null,[e("To solve this problem, install the "),a("a",h,[e("Laravel Lang: JSON Fallback Hotfix"),r(o)]),e(" package.")])]),_,a("blockquote",null,[a("p",null,[e("When performing any work with files ("),m,e(", "),f,e(", "),u,e(" and "),b,e("), in addition to php files, work with json files, including translation for "),a("a",g,[e("Laravel Framework"),r(o)]),e(", "),a("a",k,[e("Jetstream"),r(o)]),e(" , "),a("a",v,[e("Fortify"),r(o)]),e(", "),a("a",x,[e("Cashier"),r(o)]),e(", "),a("a",w,[e("Breeze"),r(o)]),e(", "),a("a",y,[e("Nova"),r(o)]),e(" , "),a("a",z,[e("Spark"),r(o)]),e(" and "),a("a",L,[e("UI"),r(o)]),e(", will also be automatically performed.")])])])}const I=n(c,[["render",N],["__file","index.html.vue"]]);export{I as default};
